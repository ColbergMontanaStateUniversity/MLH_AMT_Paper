% This code loads flux tower netCDF files, processes the data, 
% computes average buoyancy flux, creates a figure, and saves results as .mat files.

clear all; close all;

%% Pre-code

% Set up paths
Path.home = pwd;                            % Home directory
Path.data = strcat(pwd, '\ISFS_Data');       % Data directory for ISFS files

% Create a directory of netCDF files
cd(Path.data)
Directory = dir("isfs_m2hats_qc_geo_tiltcor_5min_*.nc");
cd(Path.home)

%% Loop over each netCDF file
for i = 1:length(Directory)

    %% Load the flux tower data
    try
        [Data1] = load_flux_tower_data(Path, Directory(i).name);    % Load current day's file
        [Data2] = load_flux_tower_data(Path, Directory(i+1).name);  % Load next day's file to concatenate
    catch
        continue
    end
    
    
    %% Concatenate the data
    [FluxData] = concatenate_flux_tower_data(Data1, Data2);
    clear Data1 Data2

    %% Trim the data
    [FluxData] = trim_flux_tower_data(FluxData);

    %% Determine the average buoyancy flux
    [FluxData] = compute_average_flux(FluxData);

    %% Clear unnecessary fields to save space
    FluxData = rmfield(FluxData, {...
        'wTc4mT0', 'wH2o4mT0', 'p4mT0', 'h2o4mT0', ...
        'wTc4mT2', 'wH2o4mT2', 'p4mT2', 'h2o4mT2', ...
        'wTc4mT5', 'wH2o4mT5', 'p4mT5', 'h2o4mT5', ...
        'wTc4mT8', 'wH2o4mT8', 'p4mT8', 'h2o4mT8', ...
        'wTc4mT11', 'wH2o4mT11', 'p4mT11', 'h2o4mT11', ...
        'wTc4mT14', 'wH2o4mT14', 'p4mT14', 'h2o4mT14', ...
        'wTc4mT17', 'wH2o4mT17', 'p4mT17', 'h2o4mT17', ...
        'wTc4mT20', 'wH2o4mT20', 'p4mT20', 'h2o4mT20', ...
        'wTc4mT23', 'wH2o4mT23', 'p4mT23', 'h2o4mT23', ...
        'wTc4mT26', 'wH2o4mT26', 'p4mT26', 'h2o4mT26', ...
        'wTc4mT29', 'wH2o4mT29', 'p4mT29', 'h2o4mT29', ...
        'wTc4mT32', 'wH2o4mT32', 'p4mT32', 'h2o4mT32', ...
        'wTc4mT35', 'wH2o4mT35', 'p4mT35', 'h2o4mT35', ...
        'wTc4mT38', 'wH2o4mT38', 'p4mT38', 'h2o4mT38', ...
        'wTc4mT41', 'wH2o4mT41', 'p4mT41', 'h2o4mT41', ...
        'wTc4mT44', 'wH2o4mT44', 'p4mT44', 'h2o4mT44', ...
        'wTc4mT47', 'wH2o4mT47', 'p4mT47', 'h2o4mT47', ...
        'tk4mT0', 'tk4mT2', 'tk4mT5', 'tk4mT8', 'tk4mT11', ...
        'tk4mT14', 'tk4mT17', 'tk4mT20', 'tk4mT23', 'tk4mT26', ...
        'tk4mT29', 'tk4mT32', 'tk4mT35', 'tk4mT38', 'tk4mT41', ...
        'tk4mT44', 'tk4mT47', ...
        'q4mT0', 'q4mT2', 'q4mT5', 'q4mT8', 'q4mT11', ...
        'q4mT14', 'q4mT17', 'q4mT20', 'q4mT23', 'q4mT26', ...
        'q4mT29', 'q4mT32', 'q4mT35', 'q4mT38', 'q4mT41', ...
        'q4mT44', 'q4mT47', ...
        'theta4mT0', 'theta4mT2', 'theta4mT5', 'theta4mT8', ...
        'theta4mT11', 'theta4mT14', 'theta4mT17', 'theta4mT20', ...
        'theta4mT23', 'theta4mT26', 'theta4mT29', 'theta4mT32', ...
        'theta4mT35', 'theta4mT38', 'theta4mT41', 'theta4mT44', ...
        'theta4mT47', ...
        'thetaV4mT0', 'thetaV4mT2', 'thetaV4mT5', 'thetaV4mT8', ...
        'thetaV4mT11', 'thetaV4mT14', 'thetaV4mT17', 'thetaV4mT20', ...
        'thetaV4mT23', 'thetaV4mT26', 'thetaV4mT29', 'thetaV4mT32', ...
        'thetaV4mT35', 'thetaV4mT38', 'thetaV4mT41', 'thetaV4mT44', ...
        'thetaV4mT47', ...
        'wThetaV4mT0', 'wThetaV4mT2', 'wThetaV4mT5', 'wThetaV4mT8', ...
        'wThetaV4mT11', 'wThetaV4mT14', 'wThetaV4mT17', 'wThetaV4mT20', ...
        'wThetaV4mT23', 'wThetaV4mT26', 'wThetaV4mT29', 'wThetaV4mT32', ...
        'wThetaV4mT35', 'wThetaV4mT38', 'wThetaV4mT41', 'wThetaV4mT44', ...
        'wThetaV4mT47','e4mT47', 'e4mT0', 'e4mT2', 'e4mT5', 'e4mT8',...
        'e4mT11', 'e4mT14', 'e4mT17', 'e4mT20', 'e4mT23', 'e4mT26',...
        'e4mT29', 'e4mT32', 'e4mT35', 'e4mT38', 'e4mT41', 'e4mT44'});

    %% Create figure of buoyancy flux
    figure(1)
    set(gcf, 'Position', [100, 100, 1600, 600]); % Set figure size
    plot(FluxData.time, FluxData.wThetaVAvgSmooth, 'LineWidth', 1.5)
    hold on
    yline(0, '--', 'LineWidth', 1) % Reference line at zero
    xlabel('Time (hr)')
    ylabel('Cov(w\theta_v)', 'Interpreter', 'tex')
    xlim([0 24])
    set(gca, 'FontSize', 18)

    %% Save processed data
    cd(Path.data)
    tmp = strcat(Directory(i).name(33:40), '_flux_tower_data'); % Create filename
    save(tmp, 'FluxData')
    cd(Path.home)

    %% Close figure and clear variables
    close(figure(1))
    disp(i)
    clear tmp FluxData
end